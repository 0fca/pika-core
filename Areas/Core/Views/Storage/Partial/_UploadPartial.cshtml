@model string
<div id="upload-modal" class="modal modal-fixed-footer">
    <form method="post" enctype="multipart/form-data" id="upload-form">
        <div class="modal-content container">
            <h4>Upload one or more files</h4>
            
            <div class="row">
                <p id="output-paragraph" class="transparent">
                    <output id="result"></output>
                </p>
                    <div class="col s12 m12 l12">
                        <div class="file-field input-field">
                            <div class="btn">
                                <span>Choose</span>
                                <input id="files" name="files" type="file" multiple>
                                </div>
                            <div class="file-path-wrapper">
                                <input class="file-path validate" type="text" placeholder="Upload one or more files">
                            </div>
                            </div>
                    </div>
                    <div class="col s12 m12 l12 center">
                        <div class="preloader-wrapper big" id="progress-spinner">
                            <div class="spinner-layer spinner-teal-only">
                              <div class="circle-clipper left">
                                <div class="circle"></div>
                              </div><div class="gap-patch">
                                <div class="circle"></div>
                              </div><div class="circle-clipper right">
                                <div class="circle"></div>
                              </div>
                            </div>
                          </div>
                    </div>
                </div>
            </div>
        <div class="modal-footer">
            <button id="upload-submit" type="button" class="waves-effect waves-green btn-flat" disabled>Upload</button>
            <button type="button" class="btn btn-danger modal-close">Close</button>
        </div>
    </form>
</div>
           
<script>
    document.getElementById("files").addEventListener("change", () => {
        const messageLabel = document.getElementById("result");
        const uploadButton = document.getElementById("upload-submit");
        messageLabel.innerText = returnFileSize(getSummarySize());
        document.getElementById("output-paragraph").setAttribute("class", "card-panel teal white-text");
        if (getSummarySize() === 0) {
            uploadButton.setAttribute("disabled", "true");
        }
        if (getSummarySize() >= 268435456) {
            messageLabel.innerText = "File or files are too big to upload it at once.";
            uploadButton.setAttribute("disabled", "true");
            deleteAllFiles();
        } else if (uploadButton.hasAttribute("disabled")) {
            uploadButton.removeAttribute("disabled");
        }
    });
    
    document.getElementById("upload-submit").addEventListener("click", async  () => {
        const progressSpinner = document.getElementById("progress-spinner");
        progressSpinner.setAttribute("class", progressSpinner.getAttribute("class").concat(" active"));
        const oFormElement = document.getElementById("upload-form");
            const resultElement = oFormElement.elements.namedItem("result");
            document.getElementById("output-paragraph").setAttribute("class", "card-panel teal white-text");
            const formData = new FormData(oFormElement);
    
            try {
                @{
                    var replaced = @Model.Replace("\\", "\\\\");
                }
                const response = await fetch("/Core/Storage/Upload?returnPath=@replaced", {
                    method: 'POST',
                    body: formData
                });
                
                response.text()
                .then(function(text) {
                    resultElement.value = text;
                     if(response.status === 202){
                         const fileRefLink = document.createElement('a');
                         fileRefLink.href = response.headers.get("Location");
                         fileRefLink.text = " You can see your file here.";
                         fileRefLink.setAttribute("class", "indigo-text");
                         resultElement.appendChild(fileRefLink);
                     }
                 })
                } catch (error) {
                    console.error('Error:', error);
                }
                progressSpinner.setAttribute("class", progressSpinner.getAttribute("class").replace("active", ""));
      });
</script>