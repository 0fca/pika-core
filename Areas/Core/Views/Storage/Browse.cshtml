@model FileResultViewModel
@inject IViewLocalizer Localizer 

<!-- TODO Add detailed list view -->
@if (Model?.Objects != null)
{
    ViewData["Title"] = Localizer["Wyszukiwarka"];
    <div id="file-list">
        @if (TempData["ShortLink"] != null)
        {
            @await Html.PartialAsync("Partial/_ShortLinkPartial.cshtml")
        }
        <div class="row grey lighten-4 z-depth-0">
            <div class="col s6 m6 l6">
                @await Html.PartialAsync("Partial/_NavMenu.cshtml")
            </div>
            <div class="col s12 m6 l6">
                <div class="row valign-wrapper">
                </div>
            </div>
        </div>
        <div class="row lighten-4 z-depth-0">
            <div class="col s12 m12 l12 right">
                <div class="input-field col s12">
                    <input id="search_input" value="" placeholder="@Localizer["Wpisz nazwę do wyszukania w nazwach np. rozszerzenie pliku..."]" type="text" class="grey-text"/>
                    <label for="search_input">@Localizer["Szukaj"]</label>
                </div>
            </div>
        </div>

        <table class="responsive-table striped highlight interactive_rows" id="dir_content">
            <thead>
            <tr>
                <th scope="col">@Localizer["Nazwa"]</th>
                <th scope="col">@Localizer["Rozmiar"]</th>
                <th scope="col">@Localizer["Data modyfikacji"]</th>
                <th scope="col"></th>
            </tr>
            </thead>
            <tbody>
            </tbody>
        </table>

    </div>

    @await Html.PartialAsync("Partial/_UploadPartial.cshtml", 
               new Tuple<string, string>(Model.BucketId, Model.CategoryId))

    @await Html.PartialAsync("Partial/_InformationSidePartial.cshtml")

    <!--<script src="~/js/media.js" asp-append-version="true" defer=""></script>-->
    <script src="~/lib/he/he.js" asp-append-version="true"></script>                                                                                
    <script src="~/js/file.js" asp-append-version="true" defer=""></script>
    <script src="~/lib/jquery-ui-1.12.1/jquery-ui.min.js" asp-append-version="true" defer=""></script>
    <link rel="stylesheet" href="~/lib/jquery-ui-1.12.1/jquery-ui.min.css" asp-append-version="true"/>
    <link rel="stylesheet" href="//cdn.datatables.net/1.13.2/css/jquery.dataTables.min.css"/>
    <script src="//cdn.datatables.net/1.13.2/js/jquery.dataTables.min.js" defer=""></script>
    <script>
         const domConfig = "trlpi";
         const categoryId = "@Model.CategoryId";
         const bucketId = "@Model.BucketId";
         $(document).ready( function () {
             const ev = new Event("dataLoaded");
             registerCallbacks();
             const dt = $('#dir_content').DataTable({
                "oSearch": {"sSearch": "@Model.SelectedTag"},
                autoWidth: false,
                language: {
                  "emptyTable": '@Localizer["Brak danych"]',
                  "loadingRecord": '@Localizer["Ładowanie"]...',
                  "search": '@Localizer["Szukaj"]:',
                  "info": '@Localizer["Wyświetlono start do end z total rekordów"]',
                  "infoEmpty": '@Localizer["Wyświetlono 0 do 0 z 0 rekordów"]',
                  "lengthMenu": '@Localizer["Rekordów na stronę _MENU_"]',
                  "paginate": {
                      "first":      '@Localizer["Pierwszy"]',
                      "last":       '@Localizer["Ostatni"]',
                      "next":       '@Localizer["Następny"]',
                      "previous":   '@Localizer["Poprzedni"]'
                  },
                  "zeroRecords":    '@Localizer["Brak pasujących rekordów"]',
                },
                columnDefs: [
                    {
                        target: 3,
                        visible: false
                    } 
                ],
                dom: domConfig
             }); 
             dt.on( 'draw.dt', function ( e, settings, len ) {
                   console.log("Draw");
                   registerSelectionEventsContentTable();
             });
             $("#select_length").val(@Model.PerPage);
             $('#search_input').on('propertychange input', (e) => {
                 if ($('#search_input').val().length >= 3){
                    invokeReceiveListing($('#search_input').val(), "@Model.CategoryId", "@Model.BucketId", ev);
                }
             });
             document.addEventListener("dataLoaded", (ev) => {
               const data = localStorage.getItem("data");
               if (data !== null){
                   dt.clear();
                   const listing = JSON.parse(data).listing;
                   for (let i in listing){
                       const objectInfo = listing[i];
                       dt
                       .row
                       .add([ objectInfo.humanName, objectInfo.formattedSize, objectInfo.formattedDateTime, objectInfo.fullName]);
                   }
                   dt.draw();
               }
             });
             function resetInfoView(){
                const loader = $('#loader');
                loader.show();
                $('#resource_information_content').empty();
             }

            function registerSelectionEventsContentTable(){
                 const infoSlide = $('#info-slide');   
                 $('#dir_content tbody tr').on('click', function() {
                                        console.log("Test");
                                                      const data = dt.row(this).data();
                                                     if ( $(this).hasClass('row_selected') ) {
                                                        $(this).removeClass('row_selected');
                                                        infoSlide.hide();
                                                        resetInfoView();
                                                     }
                                                     else {
                                                          infoSlide.show();
                                                          const name = data[3];
                                                          fetch('@Url.Action("Information", "Storage")/' + `?bucketId=${bucketId}&objectName=${name}&categoryId=${categoryId}`)
                                                               .then(r => {
                                                                        if(r.ok){
                                                                                r.text().then(t => {
                                                                                        $('#loader').hide();
                                                                                        $('#resource_information_content').html(t);
                                                                                });
                                                                        }else{
                                                                                 console.error(r.statusText); 
                                                                        }
                                                                });
                                                        dt.$('tr.row_selected').removeClass('row_selected');
                                                        $(this).addClass('row_selected');
                                                     }         
                                                   }); 
            }
              
         } );
    </script>
}