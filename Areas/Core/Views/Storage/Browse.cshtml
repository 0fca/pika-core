@using PikaCore.Infrastructure.Security
@model FileResultViewModel
@inject IdDataProtection DataProtection
@inject IViewLocalizer Localizer  
@{
    var msg = TempData["returnMessage"];
}
<!-- TODO Part this file to partials -->
<!-- TODO Add detailed list view -->
@if(Model?.Objects != null)
{
    ViewData["Title"] = Localizer["Browse"];
    var lastPath = ViewData["path"] as string;
    var returnUrl = ViewData["returnUrl"];
    <div id="file-list">
        <div class="row">
            <div class="col s12 l7 m8">
                @{
                    var itemText = @Model.Objects.Count == 1 ? Localizer["item"] : Localizer["items"];
                }
                <h5 class="center-on-small-only">@Localizer["Found"] @Model.Objects.Count @itemText</h5>
            </div>
        </div>
        <div class="row card-panel grey lighten-4 z-depth-0">
            <div class="col s1 m1 l1">
                <a class="transparent flow-text"
                   asp-area="Core"
                   asp-controller="Storage"
                   asp-action="Browse"
                   asp-route-path="@returnUrl">
                    <span class="material-icons">
                        arrow_back
                    </span>
                </a>
            </div>
            <div class="col s11 m11 l11">
                    @await Html.PartialAsync("Partial/_NavMenu.cshtml")
            </div>
            </div>
        @{
            if (Model.Objects.Count > 0)
            {
                <table class="table" id="dir_content">
                    <thead>
                    <tr>
                        <th scope="col">Name</th>
                        <th scope="col">Size</th>
                        <th scope="col">Modified</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var item in Model.Objects)
                    {
                        <tr>
                            @if (item.IsDir)
                            {
                               @await Html.PartialAsync("Partial/_DirectoryListItemPartial", new Tuple<string, ObjectInfo>(lastPath, item))

                            }
                            else
                            {
                                @await Html.PartialAsync("Partial/FileListItemPartial", new Tuple<string, ObjectInfo>(lastPath, item))
                            }
                        </tr>
                    }
                    </tbody>
                </table>
            }
            else
            {
                <div class="row">
                    <div class="s10 m10 l10">
                        <p class="flow-text center-align">@Localizer["It is empty in here..."]</p>
                    </div>
                </div>
            }
        }
        <div class="fixed-action-btn">
            <a class="btn-floating btn-large teal-accent">
                <i class="large material-icons">menu</i>
            </a>
        </div>

    </div>
 


    //@await Html.PartialAsync("Partial/_AddDirectoryPartial.cshtml", lastPath)

    //@await Html.PartialAsync("Partial/_StatusMessage.cshtml", msg)

    //@await Html.PartialAsync("Partial/_UploadPartial.cshtml", lastPath)
   
   // @await Html.PartialAsync("Partial/_InformationSidePartial.cshtml")
    

    <script src="~/js/media.js" asp-append-version="true" defer=""></script>
    <script src="~/js/file.js" asp-append-version="true" defer=""></script>
    <script src="~/lib/jquery-ui-1.12.1/jquery-ui.min.js" asp-append-version="true" defer=""></script>
    <link rel="stylesheet" href="~/lib/jquery-ui-1.12.1/jquery-ui.min.css" asp-append-version="true"/>
    <link rel="stylesheet" href="//cdn.datatables.net/1.13.2/css/jquery.dataTables.min.css" />
    <script src="//cdn.datatables.net/1.13.2/js/jquery.dataTables.min.js" defer=""></script>
     <script>
         $(document).ready( function () {
             $('#dir_content').DataTable();
         } );
    </script> 
}