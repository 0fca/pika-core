@model FMS2.Models.FileResultModel
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Browse";
    var lastPath = ViewData["path"];
    var msg = TempData["returnMessage"];
    var returnUrl = ViewData["returnUrl"];
    var urlhash = TempData["urlhash"];
}

<h4>
    Directory listing for:
</h4>
<span>
        @{
            var splitted = lastPath.ToString().Split("/");
            var last = "";
            var tmp = "/File?path=" + last;

            <a href="/File?path">Index</a>

            foreach (var part in splitted)
            {

                if (!string.IsNullOrEmpty(part))
                {

                    last = string.Concat(last, "/", part);
                    tmp = "/File?path=" + last;
                    <a class="breadcrumb breadcrumb-icon" href=@tmp>@part</a>

                }
            }
        }
    <button class="waves-effect waves-teal btn-flat" id="copyButton" onclick="copyToClipboard('helperInput');" type="button"><i class="fas fa-copy"></i></button>
    <input id="helperInput" value="@Context.Request.Host@tmp" class="offscreen" aria-hidden="true"/>
    <input type="text" id="pathField" placeholder="Enter the absolute system path..." class="form-control" value="@last"/>
</span>


@await Html.PartialAsync("_StatusMessage", msg)

<div id="download-panel" class="row" hidden>
    @await Html.PartialAsync("_DownloadPartial")
</div>
<div class="row">
    <span class="manage-span">
        
        <a class="btn-flat modal-trigger" data-target="upload-modal"><i class="fas fa-upload"></i></a>
    </span>
</div>
<div class="row">
    <div class="col s6 m6 l6">
        <strong>Name</strong>
    </div>
    <div class="col s4 m4 l4">
        <strong>Size</strong>
    </div>
    <div class="col s2 m2 l2">
        <strong>Options</strong>
    </div>
    <input type="text" id="searchBox" maxlength="32" placeholder="Search" oninput="searchFileList();" />
</div>
<div id="file-list" class="collection">
    <div class="row">
        <a class="collection-item" asp-controller="File" asp-action="Index" asp-route-path="@returnUrl">..</a>
    </div>
    @{
        if (Model.Contents != null)
        {
            if (Model.Contents.Count > 0)
            {
                foreach (var item in Model.Contents)
                {
                    <div class="row">
                        <div class="col s6 m6 l6 truncate">
                            @if (item.IsDirectory)
                            {
                                
                                <a class="collection-item" asp-controller="File" asp-action="Index" asp-route-path=@item.Name><i class="fas fa-folder browse-icon-margin"></i>@item.Name</a>
                            }
                            else
                            {
                                var type = MimeAssistant.RecognizeIconByMime(MimeAssistant.GetMimeType(item.Name));
                                
                                <a class="collection-item" asp-controller="File" asp-action="Download" asp-route-id=@item.Name><i class="fas fa-@type browse-icon-margin"></i>@item.Name</a>
                            }
                        </div>
                        <div class="col s4 m4 l4">
                            @if (!item.IsDirectory)
                            {
                                var unitStrPart = "";
                                var i = item.Length;
                                string[] units = {"B", "kB", "MB", "GB", "TB"};
                                var unitIndex = 0;
                                for (var ptr = 0; ptr <= units.Length; ptr++)
                                {
                                    if (i < Math.Pow(1024, ptr) && i > 1024)
                                    {
                                        unitIndex = ptr - 1;
                                        break;
                                    }
                                }
                                unitStrPart = Math.Round(i / Math.Pow(1024, unitIndex), 2) + " " + units[unitIndex];
                                <p>@unitStrPart</p>
                            }
                            else
                            {
                                <p>---</p>
                            }
                        </div>
                        <div class="col s2 m2 l2 opt-font">
                            <a class='dropdown-trigger' href='#' data-target='options-@item.Name'><i class="material-icons">more_horiz</i></a>

                            <ul id='options-@item.Name' class='dropdown-content'>
                                @{var user = await UserManager.GetUserAsync(Context.User); }
                                @if (user != null && await UserManager.IsInRoleAsync(user, "FileManagerUser"))
                                {
                                    if (!item.IsDirectory)
                                    {
                                        <li><a asp-action="GenerateUrl" asp-route-name="@item.Name" asp-route-returnUrl="@Context.Request.Path"><i class="fas fa-bolt" title="Generate download url"></i></a></li>
                                        if (item.Name.EndsWith(".mp3") || item.Name.EndsWith(".mp4") || item.Name.EndsWith(".avi"))
                                        {
                                            <li><a asp-action="Watch" asp-controller="Video" asp-route-path=@item.Name><i class="fas fa-play" title="Play"></i></a></li>
                                        }
                                    }
                                    else
                                    {
                                        <li><a asp-action="Archive" asp-controller="File" onclick="showDownloadBox();" asp-route-id="@item.Name"><i class="fas fa-arrow-down" title="Download directory as zip"></i></a></li>
                                    }
                                    <li><a asp-action="Rename" asp-route-inname="@item.Name"><i class="fas fa-pen"></i></a></li>
                                }
                                else
                                {
                                    if (!item.IsDirectory)
                                    {
                                        <li><a asp-action="GenerateUrl" asp-route-name="@item.Name" asp-route-returnUrl="@Context.Request.Path"><i class="fas fa-bolt" title="Generate download url"></i></a></li>
                                    }
                                }
                            </ul>

                            @if (urlhash != null && item.Name.Equals(TempData["url_name"].ToString()))
                            {
                                @await Html.PartialAsync("_GenerateUrlPartial")
                            }
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="row">
                    <h3>It is empty in here...</h3>
                </div>
            }
        }
        else
        {
            <div class="row">
                <h1>This folder or file does not exist.</h1>
            </div>
        }
    }
    <div class="row">
        <a class="collection-item" asp-controller="File" asp-action="Index" asp-route-path="@returnUrl">..</a>
    </div>
</div>

@await Html.PartialAsync("_UploadPartial", new List<IFormFile>())

<script>
    document.getElementById("searchBox").addEventListener("keydown", function (e) {
        if (e.keyCode == 8) {
            searchFileList();
        }
    });
    //loadKeyListeners();
    document.getElementById("pathField").addEventListener("keydown", (key) => {
        if (key.keyCode == 13) {
            const path = document.getElementById("pathField").value;
            location = `/File?path=${path}`;
        }
    });
</script>