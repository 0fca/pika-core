@using PikaCore.Controllers.Helpers
@using PikaCore.Security
@model PikaCore.Models.FileResultViewModel
@inject UserManager<ApplicationUser> UserManager
@inject IFileService FileService
@inject IdDataProtection DataProtection

@{
    ViewData["Title"] = "Browse";
    var lastPath = ViewData["path"] as string;
    var msg = TempData["returnMessage"];
    var returnUrl = ViewData["returnUrl"];
    var user = await UserManager.GetUserAsync(Context.User);
    var pageCount = int.Parse(TempData["PageCount"].ToString());
    var offset = int.Parse(TempData["Offset"].ToString());
    var count = int.Parse(TempData["Count"].ToString());
    var directorySeparator = System.IO.Path.DirectorySeparatorChar;
    var paginationData = new Dictionary<string, object> {{"Offset", offset}, {"Count", count}, {"PageCount", pageCount}, {"Last", lastPath}};
}

<div class="row">
    <div class="s10 m12 l12 input-field">
        @{
            var splitted = lastPath?.Split(System.IO.Path.DirectorySeparatorChar);
            var last = "";
            var tmp = "/Storage/Browse?path=" + last;

            <a class="teal-text" href="/Storage/Browse/">Browse</a>

            foreach (var part in splitted)
            {

                if (!string.IsNullOrEmpty(part))
                {

                    last = System.IO.Path.Combine(last, part);
                    tmp = "/Storage/Browse?path=" + last;
                    <a class="breadcrumb breadcrumb-icon teal-text" href=@tmp>@part</a>

                }
            }
        }
        <button class="waves-effect waves-teal btn-flat" id="copyButton" onclick="copyToClipboard('helperInput');" type="button"><i class="fas fa-copy"></i></button>
        <input id="helperInput" value="@Context.Request.Host@tmp" class="offscreen" aria-hidden="true" />
        <input type="text" id="pathField" placeholder="Enter the absolute system path..." class="autocomplete" value="@lastPath" autofocus />

    </div>
</div>

@await Html.PartialAsync("Partial/_PaginationPartial.cshtml", paginationData)

<div id="file-list" class="collection">
    <div class="row">
        <div class="col s5 l7 m8">
            <span>File and directory count: @Model.ContentsList.Count</span>
        </div>
        <div class="col s7 m5 l4 right">
            <input type="text" id="searchBox" maxlength="32" placeholder="Search" oninput="searchFileList();"/>
        </div>
    </div>
    <div class="row">
        <a class="collection-item" asp-controller="Storage" asp-action="Browse" asp-route-path="@returnUrl">..</a>
    </div>
    @{
        if (Model.Contents != null)
        {
            if (Model.ContentsList.Count > 0)
            {
                foreach (var item in Model.ContentsList)
                {
        <div class="row">
            <div class="col s6 m6 l6 truncate valign-wrapper">
                @if (item.IsDirectory)
                    {

                        <a class="collection-item" asp-controller="Storage" asp-action="Browse" asp-route-path="@System.IO.Path.Combine(lastPath, item.Name)" title="@item.Name"><i class="fas fa-folder prefix browse-icon-margin"></i>@item.Name</a>
                    }
                    else
                    {
                        var mime = "";
                        mime = MimeAssistant.GetMimeType(item.PhysicalPath);
                        if (!mime.StartsWith("image/")
                            && !mime.StartsWith("video/"))
                        {
                            var type = MimeAssistant.RecognizeIconByMime(mime);
                            
                            <a class="collection-item" asp-controller="Storage" asp-action="Download" asp-route-id=@DataProtection.Encode(item.PhysicalPath) asp-route-returnUrl=@lastPath title="@item.Name"><i class="fas fa-@type prefix browse-icon-margin"></i>@item.Name</a>
                        }
                        else
                        {
                           
                            var id = "1."+lastPath?.Replace("/", "-") + $"-{item.Name}";
                            <div class="col s3 m1 l1 material-placeholder">
                                <img class="materialboxed" id="@id" alt="@item.Name" width="48" src="~/images/loading_icon.gif"/>
                            </div>
                            <div class="col s5 m7 l7 center-align">
                                <a class="collection-item left-align" asp-controller="Storage" asp-action="Download" asp-route-returnUrl="@lastPath" asp-route-id=@DataProtection.Encode(item.PhysicalPath) title="@item.Name">
                                    @item.Name
                                </a>
                            </div>
                        }
                    }
            </div>
            <div class="col m2 l2 hide-on-small-only">
                @{
                    var dateString = @item.LastModified.Date.ToLongDateString();
                }
                <p>@dateString</p>
            </div>
            <div class="col m2 l2">
                @if (!item.IsDirectory)
                            {
                                var unitStrPart = "";
                                var i = item.Length;
                                string[] units = { "B", "kiB", "MiB", "GiB", "TiB" };
                                var unitIndex = 0;
                                for (var ptr = 0; ptr <= units.Length; ptr++)
                                {
                                    if (i < Math.Pow(1024, ptr) && i > 1024)
                                    {
                                        unitIndex = ptr - 1;
                                        break;
                                    }
                                }
                                unitStrPart = Math.Round(i / Math.Pow(1024, unitIndex), 2) + " " + units[unitIndex];
                                <p>@unitStrPart</p>
                            }
                            else
                            {
                                <p>---</p>
                            }
            </div>
            <div class="col m2 l2 opt-font">
                <a class='dropdown-trigger grey-text text-darken-4' href='#' data-target='options-@item.Name'><i class="material-icons">more_horiz</i></a>

                <ul id='options-@item.Name' class='dropdown-content'>
                    @{var ext = System.IO.Path.GetExtension(item.Name);}
                    @if (ext.Equals(".mp3") || ext.Equals(".mp4"))
                    {
                        <li><a href="https://player.lukas-bownik.net/"><i class="fas fa-play" title="Play"></i></a></li>
                    }

                    @if (user != null
                     && !(await UserManager.IsInRoleAsync(user, "User")))
                    {
                        <li><a asp-action="Rename" asp-route-n="@System.IO.Path.Combine(lastPath, item.Name)"><i class="fas fa-pen"></i></a></li>
                    }
                    @if(!item.IsDirectory)
                    {
                        <li><a asp-action="GenerateUrl" asp-route-name="@DataProtection.Encode(item.PhysicalPath)" asp-route-returnUrl="@lastPath"><i class="fas fa-link" title="Generate download url"></i></a></li>
                    }
                </ul>
            </div>
        </div>
                }
            }
            else
            {
        <div class="row">
            <div class="s10 m10 l10">
                <h4 class="center-align">It is empty in here...</h4>
            </div>
        </div>
            }
        }
        else
        {
        <div class="row">
            <div class="s10 m10 l10">
                <h4 class="center-align">This location doesn't exist.</h4>
            </div>
        </div>
        }
    }
    <div class="row">
        <a class="collection-item" asp-controller="Storage" asp-action="Browse" asp-route-path="@returnUrl">..</a>
    </div>
    
<div class="fixed-action-btn">
  <a class="btn-floating btn-large teal-accent">
    <i class="large material-icons">mode_edit</i>
  </a>
  <ul>
  @if (user != null
       && !(await UserManager.IsInRoleAsync(user, "User"))) {
                <li><a data-target="file-editor" class="btn btn-floating modal-trigger"><i class="fas fa-folder-plus"></i></a></li>
                <li><a class="btn btn-floating" asp-controller="Storage" asp-action="Delete" asp-route-currentPath="@lastPath"><i class="fas fa-trash-alt"></i></a></li>
          }
      <li><a class="btn btn-floating modal-trigger" data-target="upload-modal"><i class="fas fa-upload"></i></a></li>
  </ul>
</div>
      
</div>
@await Html.PartialAsync("Partial/_PaginationPartial.cshtml", paginationData)

@await Html.PartialAsync("Partial/_AddDirectoryPartial.cshtml", lastPath)

@await Html.PartialAsync("Partial/_StatusMessage.cshtml", msg)

@await Html.PartialAsync("Partial/_UploadPartial.cshtml", new List<IFormFile>())

@if (TempData["showGenerateUrlPartial"] != null && bool.Parse(TempData["showGenerateUrlPartial"].ToString()))
{
    @await Html.PartialAsync("Partial/_GenerateUrlPartial.cshtml")
}

<script>
    const listingPath = "@lastPath";
    const directorySeparator = "@directorySeparator";
    document.getElementById("searchBox").addEventListener("keydown", function (e) {
        if (e.code === "Enter") {
            searchFileList();
        }
    });

    document.getElementById("pathField").addEventListener("keydown", (key) => {
        if (key.code === "Enter") {
            const path = document.getElementById("pathField").value;
            window.location = `/Storage/Browse?path=${path}`;
        }
    });

    document.getElementById("pathField").addEventListener("keyup", (key) => {
        if (key.code === "Slash") {
            const currentPath = document.getElementById("pathField").value;
            requestListing(currentPath);
        }
    });

    document.addEventListener('DOMContentLoaded', function () {
        const elems = document.querySelectorAll('.autocomplete');
        const instances = M.Autocomplete.init(elems, {});
    })
</script>
<script src="~/js/media.js" asp-append-version="true"></script>
