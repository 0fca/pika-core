@model Dictionary<string,object>
@{ 

    Model.TryGetValue("PageCount", out object pgc);
    Model.TryGetValue("Last", out object last);
    Model.TryGetValue("Count", out object strCount);
    Model.TryGetValue("Offset", out object strOffset);
    var pageCount = int.Parse(pgc.ToString());
    var offset = int.Parse(strOffset.ToString());
    var count = int.Parse(strCount.ToString());
}
    <div class="row">
        <ul class="pagination">
            @for (int i = 1; i <= pageCount; i++)
            {
                var active = (offset / count) == i - 1 ? "active" : "";
                <li class="waves-effect @active white-text"><a asp-action="Index" asp-route-path="@last.ToString()" asp-route-offset="@((i - 1) * count)">@i</a></li>
            }
        </ul>
    </div>
