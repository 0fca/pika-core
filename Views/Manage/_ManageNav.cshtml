@inject SignInManager<ApplicationUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
    var isAdmin = SignInManager.Context.User.IsInRole("Admin");
}

<ul class="tabs tabs-fixed-width nav-menu-colors">
    <li class="col s4 tab"><a target="_self" class="@ManageNavPages.IndexNavClass(ViewContext)" asp-action="Index">Profile</a></li>
    <li class="col s4 tab"><a target="_self" class="@ManageNavPages.ChangePasswordNavClass(ViewContext)" asp-action="ChangePassword">Password</a></li>
    @if (hasExternalLogins)
    {
        <li class="col s4 tab"><a target="_self" class="@ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-action="ExternalLogins">External logins</a></li>
    }
    <li class="col s4 tab"><a target="_self" class="@ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" asp-action="TwoFactorAuthentication">Two-factor authentication</a></li>
</ul>

